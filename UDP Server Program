
#include<stdio.h>
#include<sys/socket.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<string.h>
#include <unistd.h>

#define PORT 4000

int main() {
    int sockfd, addr_len = sizeof(struct sockaddr_in);
    char buf[1024];
    struct sockaddr_in server_addr, client_addr;

    // Create UDP socket
    sockfd = socket(AF_INET, SOCK_DGRAM, 0);
    if (sockfd < 0) {
        perror("Error creating socket");
        return 1;
    }

    // Configure server address settings
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(PORT);
    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);

    // Bind socket to port
    if (bind(sockfd, (struct sockaddr*)&server_addr, sizeof(server_addr)) < 0) {
        perror("Bind failed");
        return 1;
    }

    printf("Server listening on port %d...\n", PORT);

    while (1) {
        // Receive message from client
        int n = recvfrom(sockfd, buf, sizeof(buf), 0, (struct sockaddr*)&client_addr, &addr_len);
        buf[n] = '\0';

        printf("Received from client: %s\n", buf);

        // If received "quit", exit loop
        if (strcmp(buf, "quit") == 0)
            break;

        // Echo message back to client
        sendto(sockfd, buf, n, 0, (struct sockaddr*)&client_addr, addr_len);
    }

    // Close socket
    close(sockfd);
    return 0;
}
